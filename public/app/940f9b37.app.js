"use strict";angular.module("dscplnrApp",["ngCookies","ngResource","ngSanitize","btford.socket-io","ui.router","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(a,b,c,d){b.otherwise("/"),c.html5Mode(!0),d.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}]),angular.module("dscplnrApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("dscplnrApp").controller("LoginCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){a.errors.other=b.message})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("dscplnrApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.errors={},a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."})["catch"](function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})}}]),angular.module("dscplnrApp").controller("SignupCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("dscplnrApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){a.users=d.query(),a["delete"]=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("dscplnrApp").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("dscplnrApp").controller("MainCtrl",["$scope","$http","socket","$filter","$stateParams",function(a,b,c,d,e){a.thisThingDay=[],a.thisThingDay.tasks=[],a.twinThingDay=[],a.twinThingDay.tasks=[];var f=new Date,g=d("date")(f,"yyyy-MM-dd"),h=new Date((new Date).valueOf()+864e5),i=d("date")(h,"yyyy-MM-dd");if(""!=e.primaryDay){var j=new Date(new Date(e.primaryDay).valueOf()),k=new Date(new Date(e.primaryDay).valueOf()+864e5),l=new Date(new Date(e.primaryDay).valueOf()+1728e5),m=new Date(new Date(e.primaryDay).valueOf()+2592e5);a.prevDay=d("date")(j,"yyyy-MM-dd"),a.thisDay=d("date")(k,"yyyy-MM-dd"),a.twinDay=d("date")(l,"yyyy-MM-dd"),a.nextDay=d("date")(m,"yyyy-MM-dd")}else{var j=new Date((new Date).valueOf()-864e5),k=new Date,l=new Date((new Date).valueOf()+864e5),m=new Date((new Date).valueOf()+1728e5);a.prevDay=d("date")(j,"yyyy-MM-dd"),a.thisDay=d("date")(k,"yyyy-MM-dd"),a.twinDay=d("date")(l,"yyyy-MM-dd"),a.nextDay=d("date")(m,"yyyy-MM-dd")}a.thisDay==g?(a.thisLabel=d("date")(k,"MM/dd")+" | Today!",a.twinLabel=d("date")(l,"MM/dd")+" | Tomorrow"):a.twinDay==g?(a.thisLabel=d("date")(k,"MM/dd")+" | Yesterday",a.twinLabel=d("date")(l,"MM/dd")+" | Today!"):a.thisDay==i?(a.thisLabel=d("date")(k,"MM/dd")+" | Tomorrow",a.twinLabel=d("date")(l,"MM/dd")):(a.thisLabel=d("date")(k,"MM/dd"),a.twinLabel=d("date")(l,"MM/dd")),b.get("/api/things/"+a.thisDay).success(function(b){b[0]&&(a.thisID=b[0]._id),a.thisThingDay=b[0]}),b.get("/api/things/"+a.twinDay).success(function(b){b[0]&&(a.twinID=b[0]._id),a.twinThingDay=b[0]}),a.removeThisTask=function(c){a.thisThingDay.tasks.splice(c,1),b.put("/api/things/"+a.thisID,{tasks:a.thisThingDay.tasks})},a.completeThisTask=function(c){a.thisThingDay.tasks[c].completed=0==a.thisThingDay.tasks[c].completed?1:0,b.put("/api/things/"+a.thisID,{tasks:a.thisThingDay.tasks})},a.removeTwinTask=function(c){a.twinThingDay.tasks.splice(c,1),b.put("/api/things/"+a.twinID,{tasks:a.twinThingDay.tasks})},a.completeTwinTask=function(c){a.twinThingDay.tasks[c].completed=0==a.twinThingDay.tasks[c].completed?1:0,b.put("/api/things/"+a.twinID,{tasks:a.twinThingDay.tasks})},a.addThing=function(){a.thisThingDay.newTask&&(a.thisThingDay.tasks||(a.thisThingDay.tasks=[]),a.thisThingDay.tasks.push({name:a.thisThingDay.newTask,minutes:"",completed:0}),a.thisThingDay.newTask=""),a.thisID?b.put("/api/things/"+a.thisID,{yyyymmdd:a.thisDay,wakePlan:a.thisThingDay.wakePlan,wakeLog:a.thisThingDay.wakeLog,eatingPlan:a.thisThingDay.eatingPlan,eatingLog:a.thisThingDay.eatingLog,exercisePlan:a.thisThingDay.exercisePlan,exerciseLog:a.thisThingDay.exerciseLog,readingPlan:a.thisThingDay.readingPlan,readingLog:a.thisThingDay.readingLog,tasks:a.thisThingDay.tasks,gratuity:a.thisThingDay.gratuity,journal:a.thisThingDay.journal}):b.post("/api/things/",{yyyymmdd:a.thisDay,wakePlan:a.thisThingDay.wakePlan,wakeLog:a.thisThingDay.wakeLog,eatingPlan:a.thisThingDay.eatingPlan,eatingLog:a.thisThingDay.eatingLog,exercisePlan:a.thisThingDay.exercisePlan,exerciseLog:a.thisThingDay.exerciseLog,readingPlan:a.thisThingDay.readingPlan,readingLog:a.thisThingDay.readingLog,tasks:a.thisThingDay.tasks,gratuity:a.thisThingDay.gratuity,journal:a.thisThingDay.journal}).success(function(b,c,d,e){a.thisID=b._id}).error(function(a,b,c,d){}),a.twinThingDay.newTask&&(a.twinThingDay.tasks||(a.twinThingDay.tasks=[]),a.twinThingDay.tasks.push({name:a.twinThingDay.newTask,minutes:"",completed:0}),a.thisThingDay.newTask=""),a.twinID?b.put("/api/things/"+a.twinID,{yyyymmdd:a.twinDay,wakePlan:a.twinThingDay.wakePlan,wakeLog:a.twinThingDay.wakeLog,eatingPlan:a.twinThingDay.eatingPlan,eatingLog:a.twinThingDay.eatingLog,exercisePlan:a.twinThingDay.exercisePlan,exerciseLog:a.twinThingDay.exerciseLog,readingPlan:a.twinThingDay.readingPlan,readingLog:a.twinThingDay.readingLog,tasks:a.twinThingDay.tasks,gratuity:a.twinThingDay.gratuity,journal:a.twinThingDay.journal}):b.post("/api/things/",{yyyymmdd:a.twinDay,wakePlan:a.twinThingDay.wakePlan,wakeLog:a.twinThingDay.wakeLog,eatingPlan:a.twinThingDay.eatingPlan,eatingLog:a.twinThingDay.eatingLog,exercisePlan:a.twinThingDay.exercisePlan,exerciseLog:a.twinThingDay.exerciseLog,readingPlan:a.twinThingDay.readingPlan,readingLog:a.twinThingDay.readingLog,tasks:a.twinThingDay.tasks,gratuity:a.twinThingDay.gratuity,journal:a.twinThingDay.journal}).success(function(b,c,d,e){a.twinID=b._id}).error(function(a,b,c,d){})},a.$on("$destroy",function(){c.unsyncUpdates("thing")})}]),angular.module("dscplnrApp").config(["$stateProvider",function(a){a.state("main",{url:"/:primaryDay",templateUrl:"app/main/main.html",controller:"MainCtrl",authenticate:!0})}]),angular.module("dscplnrApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)})["catch"](function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("dscplnrApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),angular.module("dscplnrApp").factory("Modal",["$rootScope","$modal",function(a,b){function c(c,d){var e=a.$new();return c=c||{},d=d||"modal-default",angular.extend(e,c),b.open({templateUrl:"components/modal/modal.html",windowClass:d,scope:e})}return{confirm:{"delete":function(a){return a=a||angular.noop,function(){var b,d=Array.prototype.slice.call(arguments),e=d.shift();b=c({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+e+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(a){b.close(a)}},{classes:"btn-default",text:"Cancel",click:function(a){b.dismiss(a)}}]}},"modal-danger"),b.result.then(function(b){a.apply(b,d)})}}}}}]),angular.module("dscplnrApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("dscplnrApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.menu=[{title:"Today",link:"/"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("dscplnrApp").factory("socket",["socketFactory",function(a){var b=io("",{path:"/socket.io-client"}),c=a({ioSocket:b});return{socket:c,syncUpdates:function(a,b,d){d=d||angular.noop,c.on(a+":save",function(a){var c=_.find(b,{_id:a._id}),e=b.indexOf(c),f="created";c?(b.splice(e,1,a),f="updated"):b.push(a),d(f,a,b)}),c.on(a+":remove",function(a){var c="deleted";_.remove(b,{_id:a._id}),d(c,a,b)})},unsyncUpdates:function(a){c.removeAllListeners(a+":save"),c.removeAllListeners(a+":remove")}}}]),angular.module("dscplnrApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Login</h1><p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code> / <code>test</code></p><p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p></div><div class=col-sm-12><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input type=email name=email class=form-control ng-model=user.email required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && submitted">Please enter a valid email.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Login</button> <a class="btn btn-default btn-lg btn-register" href=/signup>Register</a></div><hr><div><a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')"><i class="fa fa-google-plus"></i> Connect with Google+</a></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Sign up</button> <a class="btn btn-default btn-lg btn-register" href=/login>Login</a></div><hr><div><a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')"><i class="fa fa-google-plus"></i> Connect with Google+</a></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><form ng-submit=addThing()><div class="row row-eq-height"><div class=col-md-6 style=padding:15px><div class=row><div class=col-md-1 ui-sref="main({primaryDay: prevDay})"><h3 style=margin:0><span class="glyphicon glyphicon-chevron-left" aria-hidden=true></span></h3></div><div class=col-md-7><h3 style=margin:0>{{thisLabel}} <span ng-if=today>Today!</span></h3></div><div class="col-md-4 text-right"><input type=submit value=Save class="btn btn-primary"></div></div><br><div class=row><div class=col-md-6><label>Wake Plan</label><div class=form-group><input class=form-control ng-model=thisThingDay.wakePlan placeholder=""></div></div><div class=col-md-6><label>Wake Log</label><div class=form-group><input class=form-control ng-model=thisThingDay.wakeLog placeholder=""></div></div></div><div class=row><div class=col-md-6><label>Exercise Plan</label><div class=form-group><input class=form-control ng-model=thisThingDay.exercisePlan placeholder=""></div></div><div class=col-md-6><label>Exercise Log</label><div class=form-group><input class=form-control ng-model=thisThingDay.exerciseLog placeholder=""></div></div></div><div class=row><div class=col-md-6><label>Eating Plan</label><div class=form-group><textarea ng-model=thisThingDay.eatingPlan class=form-control rows=3></textarea></div></div><div class=col-md-6><label>Eating Log</label><div class=form-group><textarea ng-model=thisThingDay.eatingLog class=form-control rows=3></textarea></div></div></div><div class=row><div class=col-md-6><label>Reading Plan</label><div class=form-group><input ng-model=thisThingDay.readingPlan class=form-control placeholder=""></div></div><div class=col-md-6><label>Reading Log</label><div class=form-group><input ng-model=thisThingDay.readingLog class=form-control placeholder=""></div></div></div><h4>Tasks / Pomodoros (click to complete)</h4><table class="table table-hover"><tbody><tr ng-repeat="task in thisThingDay.tasks track by $index "><td width=80% ng-click=completeThisTask($index) ng-class="{ \'strike\' : task.completed }">{{task.name}}</td><td><select ng-model=task.minutes class=form-control ng-change=addThing()><option value=0>0</option><option value=15>15 minutes</option><option value=30>30 minutes</option><option value=45>45 minutes</option><option value=60>60 minutes</option><option value=90>90 minutes</option><option value=120>120 minutes</option></select></td><td><button type=button class=close ng-click=removeThisTask($index)>&times;</button></td></tr></tbody><tfoot><tr class=info><td colspan=3><input class=form-control placeholder="Press Enter to Add Task" ng-model=thisThingDay.newTask></td></tr></tfoot></table><div class=row><div class=col-md-12><div class=form-group><label>Thankful for 3</label><textarea class=form-control ng-model=thisThingDay.gratuity rows=3></textarea></div></div></div><div class=row><div class=col-md-12><div class=form-group><label>Journal</label><textarea class=form-control ng-model=thisThingDay.journal rows=3></textarea></div></div></div></div><div class=col-md-6 style="padding:15px;border-left:1px dotted #999; background-color:#eee"><div class=row><div class=col-md-7><h3 style=margin:0>{{twinLabel}} <span ng-if=tomorrow>Tomorrow!</span></h3></div><div class="col-md-4 text-right"><input type=submit value=Save class="btn btn-primary"></div><div class=col-md-1 ui-sref="main({primaryDay: twinDay})"><h3 style=margin:0 ui-sref=main({pimaryDay:nextDay})><span class="glyphicon glyphicon-chevron-right" aria-hidden=true></span></h3></div></div><br><div class=row><div class=col-md-6><label>Wake Plan</label><div class=form-group><input class=form-control ng-model=twinThingDay.wakePlan placeholder=""></div></div><div class=col-md-6><label>Wake Log</label><div class=form-group><input class=form-control ng-model=twinThingDay.wakeLog placeholder=""></div></div></div><div class=row><div class=col-md-6><label>Exercise Plan</label><div class=form-group><input class=form-control ng-model=twinThingDay.exercisePlan placeholder=""></div></div><div class=col-md-6><label>Exercise Log</label><div class=form-group><input class=form-control ng-model=twinThingDay.exerciseLog placeholder=""></div></div></div><div class=row><div class=col-md-6><label>Eating Plan</label><div class=form-group><textarea ng-model=twinThingDay.eatingPlan class=form-control rows=3></textarea></div></div><div class=col-md-6><label>Eating Log</label><div class=form-group><textarea ng-model=twinThingDay.eatingLog class=form-control rows=3></textarea></div></div></div><div class=row><div class=col-md-6><label>Reading Plan</label><div class=form-group><input ng-model=twinThingDay.readingPlan class=form-control placeholder=""></div></div><div class=col-md-6><label>Reading Log</label><div class=form-group><input ng-model=twinThingDay.readingLog class=form-control placeholder=""></div></div></div><h4>Tasks / Pomodoros (click to complete)</h4><table class="table table-hover"><tbody><tr ng-repeat="task in twinThingDay.tasks track by $index "><td width=80% ng-click=completeTwinTask($index) ng-class="{ \'strike\' : task.completed }">{{task.name}}</td><td><select ng-model=task.minutes class=form-control ng-change=addThing()><option value=0>0</option><option value=15>15 minutes</option><option value=30>30 minutes</option><option value=45>45 minutes</option><option value=60>60 minutes</option><option value=90>90 minutes</option><option value=120>120 minutes</option></select></td><td><button type=button class=close ng-click=removeTwinTask($index)>&times;</button></td></tr></tbody><tfoot><tr class=info><td colspan=3><input class=form-control placeholder="Press Enter to Add Task" ng-model=twinThingDay.newTask></td></tr></tfoot></table><div class=row><div class=col-md-12><div class=form-group><label>Thankful for 3</label><textarea class=form-control ng-model=twinThingDay.gratuity rows=3></textarea></div></div></div><div class=row><div class=col-md-12><div class=form-group><label>Journal</label><textarea class=form-control ng-model=twinThingDay.journal rows=3></textarea></div></div></div></div></div></form></div><footer class=footer><div class=container><p>Angular Fullstack v2.0.13 | <a href=https://twitter.com/tyhenkel>@tyhenkel</a> | <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues?state=open">Issues</a></p></div></footer>'),a.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand style=color:#1b86ba>dscplnr</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a href=/admin>Admin</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a href=/signup>Sign up</a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a href=/settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li></ul></div></div></div>')}]);